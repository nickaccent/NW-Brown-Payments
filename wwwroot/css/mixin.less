/* ==|== LESS mixins =====================================================
	
	A set of useful LESS mixins by Dmitry Fadeyev tweaked by Dave Fuller
    More info at: http://lesselements.com
	
	.gradient
	.bordered
	.drop-shadow
	.rounded
	.border-radius
	.opacity
	.transition-duration
	.rotation
	.scale
	.transition
	.inner-shadow
	.box-shadow
	.columns
	.translate
	.clearfix
	.box-sizing
	
========================================================================== */


/*  .gradient(#F5F5F5, #EEE, #FFF); 
	
	Gradient background. First color is the background color to use for browsers 
	that don’t support gradients. The second two colors are the start and stop 
	colors, going from bottom to top.
*/
.gradient(@color: #F5F5F5, @start: #EEEEEE, @stop: #FFFFFF) {
  background: @color;
  background: -webkit-gradient(linear, left bottom, left top, color-stop(0, @start), color-stop(1, @stop));
  background: -ms-linear-gradient(bottom, @start, @stop);
  background: -moz-linear-gradient(center bottom, @start 0%, @stop 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=@start, endColorstr=@stop);
}


/*  .bordered(#EEE, #E5E5E5, #DDD, #E5E5E5);
	
	Quick way to set a 1 pixel thick border that varies its color on each side. The color values
	go in a clockwise order: top, right, bottom, left.
*/
.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}

/*  .drop-shadow(0, 1px, 2px, 0.2);
	
	Adds a box-shadow that is a semi-transparent black. The first two values control the x and y
	axis position, the third controls blur (how big the shadow is), and the final value is the opacity
	(0 is fully transparent, 1 is opaque).
*/
.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

/*  .rounded(5px);
	Sets a border-radius for all 4 corners. If you want to set border-radius for individual corners use: .border-radius
*/
.rounded(@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box; 
}

/*  .border-radius(5px, 0, 0, 5px);
	
	Sets a border-radius for each of the 4 corners individually. 
	The values go in a clockwise rotation: top right, bottom right, bottom left, top left.
*/
.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box; 
}

/*  .opacity(0.8);
	
	Sets the opacity. 0 is fully transparent, 1 is opaque.
*/
.opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
}

/*  .transition-duration(0.2s);
	
	Sets a transition-duration (time it takes to do things like hover effects). The value provides a time in seconds.
*/
.transition-duration(@duration: 0.2s) {
  -moz-transition-duration: @duration;
  -webkit-transition-duration: @duration;
  transition-duration: @duration;
}

/*  .rotation(15deg);
	
	Rotates the item by a number of degrees clockwise.
*/
.rotation(@deg:5deg){
  -webkit-transform: rotate(@deg);
  -moz-transform: rotate(@deg);
  transform: rotate(@deg);
}

/*  .scale(2);
	
	Scales the item by the ratio provided. The above makes the item 2 times larger.
*/
.scale(@ratio:1.5){
  -webkit-transform:scale(@ratio);
  -moz-transform:scale(@ratio);
  transform:scale(@ratio);
}

/*  .transition(2s, ease-out);
	
	Sets the transition duration and effect to use for any transitions (e.g. hover effects), unlike
	transition-duration which only sets the duration.
*/
.transition(@duration:0.2s, @ease:ease-out) {
  -webkit-transition: all @duration @ease;
  -moz-transition: all @duration @ease;
  transition: all @duration @ease;
}

/*  .inner-shadow(0, 1, 2px, 0.4);
	
	Sets the inner shadow. The first two numbers are the x and y coordinates, the third is the blur
	and the last one is the strength of the shadow.
*/
.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: .4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

/*  .box-shadow(0 1px 2px #999);
	
	Sets the box-shadow. The first two numbers are the x and y coordinates, then the blur, and the
	color. This is different from drop-shadow in that it takes on a color instead of setting a
	transparent black shadow. Additionally, this mixin takes on the whole set of arguments in one
	go, so no need for commas between each number, and you can also add “inset” before the first
	number for inset shadow.
*/
.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  box-shadow: @arguments;
}

/*  .columns(250px, 0, 50px, #EEE, solid, 1px);
	
	Divides the content into columns. The variables are: column width, column count, column gap,
	column border color, column border style, column border width.
*/
.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -moz-column-width: @colwidth;
  -moz-column-count: @colcount;
  -moz-column-gap: @colgap;
  -moz-column-rule-color: @columnRuleColor;
  -moz-column-rule-style: @columnRuleStyle;
  -moz-column-rule-width: @columnRuleWidth;
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap: @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap: @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}

/*  .translate(10px, 20px)
	
	Translates an element using the given coordinates. The values are x and y offset coordinates, so
	the above example moves the element right 10 pixels and up 20 pixels.
*/
.translate(@x:0, @y:0) {
  -moz-transform: translate(@x, @y);
  -webkit-transform: translate(@x, @y);
  -o-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  transform: translate(@x, @y);
}

/*  .clearfix
	
	Clears floated element
*/
.clearfix {
	&:before, &:after { content: ""; display: table; }
	&:after { clear: both; }
	*zoom: 1;
}

/*  .box-sizing
	Prevents padding adding width to block element
*/

.box-sizing {
	-moz-box-sizing:border-box;
	-webkit-box-sizing:border-box;
	box-sizing:border-box;
}